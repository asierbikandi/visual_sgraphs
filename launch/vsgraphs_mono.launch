<launch>
    <!-- ****** System Arguments ****** -->
    <!-- Live or reading a rosbag file (offline) -->
    <arg name="offline" default="true" />
    
    <!-- ****** Dataset Arguments ****** -->
    <!-- Which semantic data file should be loaded? -->
    <arg name="env_database" default="ULMD/ulmd_seq01_jfk_e04_ofc.json" />
    
    <!-- ****** Marker Arguments ****** -->
    <!-- How much the framework should trust the markers (0.1 default, higher for mono setups) -->
    <arg name="marker_impact" default="1e10" />

    <!-- ****** Geometric Segmentation Arguments ****** -->
    <!-- How many pointclouds (after downsampling) needed to detect geometric objects (e.g., planes) -->
    <arg name="pointcloud_size_geo" default="300" />

    <!-- ****** Semantic Segmentation Arguments ****** -->
    <!-- What is the the threshold for semantic segmentation probability validation (rejects values below x) -->
    <arg name="segmentation_prob_threshold" default="0.9" />

    <!-- Check to see if loads ORB-SLAM's TF values or not -->
    <param name="use_sim_time" value="$(arg offline)" />

    <!-- Main node -->
    <node name="orb_slam3" pkg="orb_slam3_ros" type="ros_mono" output="screen">
        <!-- Remap to prepare the raw image -->
        <remap from="/camera/image_raw" to="/camera/color/image_raw"/>

        <!-- Parameters for loading real semantic data from the environment -->
        <param name="env_file" type="string" value="$(find orb_slam3_ros)/config/Environments/$(arg env_database)"/>

        <!-- Parameters for loading setting files -->
        <param name="voc_file"      type="string" value="$(find orb_slam3_ros)/orb_slam3/Vocabulary/ORBvoc.txt.bin"/>
        <param name="settings_file" type="string" value="$(find orb_slam3_ros)/config/Monocular/UniLu_RealSense_D435i_640.yaml"/>

        <!-- Parameters for semantic/geometric objects detection -->
        <param name="markers_impact" type="double" value="$(arg marker_impact)"/>
        <param name="geo_pointclouds_thresh" type="int" value="$(arg pointcloud_size_geo)"/>
        <param name="seg_prob_threshold" type="double" value="$(arg segmentation_prob_threshold)"/>

        <!-- Parameters for ROS -->
        <param name="roll" type="double" value="0" />
        <param name="yaw" type="double" value="1.5697" />
        <param name="pitch" type="double" value="-1.5697" />
        <param name="map_frame_id"    type="string"   value="map" />
        <param name="enable_pangolin"   type="bool"     value="false" />
        <param name="world_frame_id"    type="string"   value="world" />        
        <param name="cam_frame_id"      type="string"   value="camera" />
        <param name="publish_static_transform" type="bool" value="true" />
    </node>
    
    <!-- Visualization -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find orb_slam3_ros)/config/vsgraphs_mono.rviz" output="screen" />

    <!-- Transformation parameters -->
    <node pkg="tf" type="static_transform_publisher" name="wall_to_room" args="0 -3 0 0 0 0 plane room 10" />
    <node pkg="tf" type="static_transform_publisher" name="world_to_wall" args="0 -3 0 0 0 0 world plane 10" />
    <node pkg="tf" type="static_transform_publisher" name="camera_to_camera_optical" args="0 0 0 0 0 0 camera camera_color_optical_frame 10" />
    
    <!-- Trajectory path -->
    <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server_orb_slam3" output="screen" ns="orb_slam3_ros" >
        <param name="/target_frame_name"        value="/map" />
        <param name="/source_frame_name"        value="/camera" />
        <param name="/trajectory_update_rate"   value="20.0" />
        <param name="/trajectory_publish_rate"  value="20.0" />
    </node>

</launch>