<launch>
    <!-- Global arguments -->
    <arg name="offline" default="true" />
    <arg name="launch_rviz" default="true" />
    <arg name="colored_pointcloud" default="true" />
    <arg name="node_name" default="segmenter_ros" />
    <arg name="visualize" default="true" />
    <arg name="configs" default="$(find segmenter_ros)/config/cfg_yoso.yaml" />

    <!-- Use simulation time if offline -->
    <param name="use_sim_time" value="$(arg offline)" />

    <!-- ORB-SLAM3 Node -->
    <node name="orb_slam3" pkg="orb_slam3_ros" cwd="node" type="ros_rgbd" output="screen">
        <remap from="/camera/rgb/image_raw" to="/camera/color/image_raw"/>
        <remap from="/camera/depth_registered/image_raw" to="/camera/aligned_depth_to_color/image_raw"/>
        <param name="sys_params_file" type="string" value="$(find orb_slam3_ros)/config/common_system_params.yaml"/>
        <param name="voc_file"        type="string" value="$(find orb_slam3_ros)/orb_slam3/Vocabulary/ORBvoc.txt.bin"/>
        <param name="settings_file"   type="string" value="$(find orb_slam3_ros)/config/RGB-D/LuxVSD_RS_D435i_640.yaml"/>
        <param name="roll" type="double" value="0" />
        <param name="yaw" type="double" value="1.5697" />
        <param name="pitch" type="double" value="-1.5697" />
        <param name="frame_map" value="map" />
        <param name="publish_pointclouds" value="true" />
        <param name="enable_pangolin" value="false" />
        <param name="world_frame_id" value="world" />
        <param name="cam_frame_id" value="camera" />
        <param name="static_transform" value="true" />
        <param name="colored_pointcloud" value="$(arg colored_pointcloud)" />
    </node>

    <!-- Static Transforms -->
    <node pkg="tf" type="static_transform_publisher" name="bc_to_se" args="0 -3 0 0 0 0 plane room 10" />
    <node pkg="tf" type="static_transform_publisher" name="world_to_bc" args="0 -5 0 0 0 0 world plane 10" />
    <node pkg="tf" type="static_transform_publisher" name="camera_to_camera_optical" args="0 0 0 0 0 0 camera camera_color_optical_frame 10" />

    <!-- RViz Visualization -->
    <node if="$(arg launch_rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find orb_slam3_ros)/config/Visualization/vsgraphs_rgbd.rviz" output="screen" />

    <!-- Trajectory Path Server -->
    <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server_orb_slam3" output="screen" ns="orb_slam3_ros" >
        <param name="/target_frame_name" value="/map" />
        <param name="/source_frame_name" value="/camera" />
        <param name="/trajectory_update_rate" value="20.0" />
        <param name="/trajectory_publish_rate" value="20.0" />
    </node>

    <!-- Depth to Point Cloud -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />
    <node pkg="nodelet" type="nodelet" name="nodelet1" args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager">
        <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
        <remap from="rgb/image_rect_color" to="/camera/color/image_raw"/>
        <remap from="depth_registered/image_rect" to="/camera/aligned_depth_to_color/image_raw"/>
        <remap from="depth_registered/points" to="/camera/depth/points"/>
    </node>

    <!-- Segmenter Node -->
    <node name="$(arg node_name)" pkg="segmenter_ros" type="segmenter_yoso.py" output="screen">
        <rosparam command="load" file="$(arg configs)" />
        <param name="visualize" value="$(arg visualize)" />
    </node>
</launch>
